<html>

<link href="https://fonts.googleapis.com/css?family=Lato:400,700|Raleway:400,700" rel="stylesheet">

<link rel="stylesheet" type="text/css" href="../css/normalize.css">
<link rel="stylesheet" type="text/css" href="../css/skeleton.css">
<link rel="stylesheet" type="text/css" href="../css/custom-style.css">
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.2.0/styles/default.min.css">
<link rel="stylesheet" href="../css/hljs-base16.css">
<script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.2.0/highlight.min.js"></script>

<script src="https://d3js.org/d3.v7.min.js"></script>
<script src="https://d3js.org/topojson.v3.min.js"></script>

<script>

const requestData = async function() {

  const input = await d3.csv('athlete_events.csv');
  //this is the unfiltered data cause it also includes people
  // who did not get a medal (losers)
  console.log(input);

  // this is here to filter out the people who didnt get a medals
  // this is the var that we want to work with
  var medals = input.filter(function(input) {
    return input.Medal !== 'NA'
//    &&
//    input.Medal === 'Silver' ||
//    input.Medal === 'Gold';
  })

  console.log(medals)

  // what is being printed out in the console is this
  // this is an OBJECT














// my first attempt to filter out by country
// kind of a tedious way of doing this but,
// i had to try something.....
// all my efforts... for what! well see!
// for DEUTSCHLAND!

  var germany = medals.filter(function(medals) {
    return medals.Team === 'Germany'
  })

  console.log(germany)

  var gold_count = 0
  var silver_count = 0
  var bronze_count = 0

  germany.forEach((d,i) => {

    if(d["Medal"] === "Gold" ){
      gold_count = gold_count + 1;
    }

    if(d["Medal"] === "Silver" ){
      silver_count = silver_count + 1;
    }

    if(d["Medal"] === "Bronze" ){
      bronze_count = bronze_count + 1;
    }


  })

  // this is here to see if i can actually count the number of medals
  // turns out i can, i found it funny that the amount of
  // German olympic athletes who got a medal turned out to be
  // 1984... :0

  console.log(gold_count)
  console.log(silver_count)
  console.log(bronze_count)
  console.log(gold_count + silver_count + bronze_count)

  countries = {}

// i was tryig to get a list of countries in the dataset
// sometimes the countries repeat and i wanted to not get repeating values
// i failed... but with your help, i think i can succeed here!

  medals.forEach((d,i) => {

    if(i === 0 ){
      countries[i] = d["Team"]
    }

    if(i > 0) {

      countries[i] = d["Team"]
      if(countries[i] === countries[i-1]) {
        countries[i] = "";
        return;
      }


    }


  })

  // this came out ugly, remove if wanted

  console.log(countries)

  // OK now heres the CAVEAT! We want a list or dict that looks like this
  // {country: "",
  //  number_of_gold_medals: (number),
  //  number_of_silver_medals: (number),
  //  number_of_bronze_medals: (number),
  //  average_age: (number),
  //  average_weight: (number)


  // the number of elements in this object should match the number of
  // different countries that are in the "medals" object
  // unfortunately for us the number of countries in the medals object are
  // inflated since there are repeating countries
  // i need to try and work around that!

}
requestData();
</script>

</html>
